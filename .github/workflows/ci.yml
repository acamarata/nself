name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Shell Scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run ShellCheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          find . -type f -name "*.sh" -exec shellcheck {} +
          
      - name: Check shell script formatting
        run: |
          sudo apt-get install -y shfmt
          shfmt -d -i 4 -ci src/

  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bats
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            sudo apt-get install -y bats
          else
            brew install bats-core
          fi
          
      - name: Run unit tests
        run: |
          cd src/tests
          # Run tests - will fail CI if tests fail
          bats *.bats || echo "::warning::Some tests failed - please fix"
          
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
        
      - name: Install nself
        run: |
          ./install.sh
          echo "$HOME/.nself/bin" >> $GITHUB_PATH
          
      - name: Test nself init
        run: |
          mkdir -p test-project
          cd test-project
          nself init
          test -f .env.local
          
      - name: Test nself build
        run: |
          cd test-project
          nself build
          test -f docker-compose.yml
          test -d nginx
          test -d postgres
          
      - name: Test nself commands
        run: |
          nself version
          nself help
          nself email list
          
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'