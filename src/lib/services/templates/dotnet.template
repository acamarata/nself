// {{SERVICE_NAME}} Service - .NET
// Auto-generated by nself

using Microsoft.AspNetCore.Mvc;

var builder = WebApplication.CreateBuilder(args);
builder.Services.AddControllers();

var app = builder.Build();
app.MapControllers();

var port = Environment.GetEnvironmentVariable("PORT") ?? "{{SERVICE_PORT}}";
app.Urls.Add($"http://0.0.0.0:{port}");

Console.WriteLine($"{{SERVICE_NAME}} service starting on port {port}");
app.Run();

[ApiController]
[Route("/")]
public class ServiceController : ControllerBase
{
    private const string ServiceName = "{{SERVICE_NAME}}";
    private const string Version = "1.0.0";

    [HttpGet("health")]
    public IActionResult Health()
    {
        return Ok(new
        {
            status = "healthy",
            service = ServiceName,
            timestamp = DateTime.UtcNow.ToString("yyyy-MM-dd'T'HH:mm:ss.fff'Z'")
        });
    }

    [HttpGet]
    public IActionResult Index()
    {
        return Ok(new
        {
            service = ServiceName,
            version = Version,
            message = "Service is running"
        });
    }

    [HttpGet("api/data")]
    public IActionResult GetData()
    {
        try
        {
            // Add your business logic here
            return Ok(new
            {
                example = "data",
                timestamp = DateTime.UtcNow.ToString("yyyy-MM-dd'T'HH:mm:ss.fff'Z'")
            });
        }
        catch (Exception)
        {
            return StatusCode(500, new { error = "Internal server error" });
        }
    }
}