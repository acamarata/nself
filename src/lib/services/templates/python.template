#!/usr/bin/env python3
# {{SERVICE_NAME}} Service - Python
# Auto-generated by nself

from flask import Flask, jsonify, request
from datetime import datetime
import os
import logging

app = Flask(__name__)

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Configuration
PORT = int(os.environ.get('PORT', {{SERVICE_PORT}}))
SERVICE_NAME = '{{SERVICE_NAME}}'

@app.route('/health')
def health():
    """Health check endpoint"""
    return jsonify({
        'status': 'healthy',
        'service': SERVICE_NAME,
        'timestamp': datetime.utcnow().isoformat()
    })

@app.route('/')
def index():
    """Main service endpoint"""
    return jsonify({
        'service': SERVICE_NAME,
        'version': '1.0.0',
        'message': 'Service is running'
    })

@app.route('/api/data')
def get_data():
    """Example API endpoint"""
    try:
        # Add your business logic here
        data = {
            'example': 'data',
            'timestamp': datetime.utcnow().isoformat()
        }
        return jsonify(data)
    except Exception as e:
        logger.error(f"Error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

if __name__ == '__main__':
    logger.info(f"{SERVICE_NAME} service starting on port {PORT}")
    app.run(host='0.0.0.0', port=PORT, debug=False)