#!/usr/bin/env node
// {{SERVICE_NAME}} Service - Node.js
// Auto-generated by nself

const express = require('express');
const app = express();
const port = process.env.PORT || {{SERVICE_PORT}};

// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Health check endpoint
app.get('/health', (req, res) => {
  res.json({ 
    status: 'healthy',
    service: '{{SERVICE_NAME}}',
    timestamp: new Date().toISOString()
  });
});

// Main service endpoint
app.get('/', (req, res) => {
  res.json({
    service: '{{SERVICE_NAME}}',
    version: '1.0.0',
    message: 'Service is running'
  });
});

// Example API endpoint
app.get('/api/data', async (req, res) => {
  try {
    // Add your business logic here
    const data = {
      example: 'data',
      timestamp: new Date().toISOString()
    };
    res.json(data);
  } catch (error) {
    console.error('Error:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});

// Start server
app.listen(port, '0.0.0.0', () => {
  console.log(`{{SERVICE_NAME}} service listening on port ${port}`);
});

// Graceful shutdown
process.on('SIGTERM', () => {
  console.log('SIGTERM signal received: closing HTTP server');
  server.close(() => {
    console.log('HTTP server closed');
  });
});