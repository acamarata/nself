# nself Demo Configuration
# Complete demo environment with all services enabled
# Generated by nself init --demo

# ============================================
# CORE SETTINGS
# ============================================
PROJECT_NAME=demo-app
ENV=dev
BASE_DOMAIN=local.nself.org

# Enable all services for demo
POSTGRES_ENABLED=true
HASURA_ENABLED=true
AUTH_ENABLED=true
STORAGE_ENABLED=true
SERVICES_ENABLED=true

# ============================================
# DATABASE CONFIGURATION
# ============================================
POSTGRES_VERSION=16-alpine
POSTGRES_HOST=postgres
POSTGRES_DB=demo_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=demo-password
POSTGRES_PORT=5432
POSTGRES_EXTENSIONS=uuid-ossp,pgcrypto,pg_trgm,pgvector,pg_stat_statements,hstore,postgis

# ============================================
# HASURA CONFIGURATION
# ============================================
HASURA_VERSION=v2.44.0
HASURA_GRAPHQL_ADMIN_SECRET=demo-admin-secret
HASURA_GRAPHQL_ENABLE_CONSOLE=true
HASURA_JWT_KEY=demo-jwt-secret-key-minimum-32-characters-long
HASURA_JWT_TYPE=HS256
HASURA_GRAPHQL_DEV_MODE=true
HASURA_GRAPHQL_ENABLE_TELEMETRY=false
HASURA_GRAPHQL_CORS_DOMAIN=*
HASURA_ROUTE=api.${BASE_DOMAIN}
HASURA_PORT=8080
HASURA_CONSOLE_PORT=9695

# ============================================
# AUTHENTICATION SERVICE
# ============================================
# Note: Auth service may have issues with some configurations
# Set to false if you encounter startup problems
AUTH_ENABLED=false
AUTH_VERSION=0.36.0
AUTH_HOST=auth
AUTH_PORT=4000
AUTH_JWT_SECRET=demo-jwt-secret-key-minimum-32-characters-long
AUTH_REFRESH_TOKEN_SECRET=demo-refresh-token-secret
AUTH_ACCESS_TOKEN_EXPIRY=15m
AUTH_REFRESH_TOKEN_EXPIRY=7d
AUTH_JWT_REFRESH_TOKEN_EXPIRES_IN=2592000
AUTH_JWT_ACCESS_TOKEN_EXPIRES_IN=900
AUTH_WEBAUTHN_ENABLED=false
AUTH_ROUTE=auth.${BASE_DOMAIN}
AUTH_CLIENT_URL=http://localhost:3000

# Email Configuration for Auth
AUTH_SMTP_HOST=mailpit
AUTH_SMTP_PORT=1025
AUTH_SMTP_USER=""
AUTH_SMTP_PASS=""
AUTH_SMTP_SECURE=false
AUTH_SMTP_SENDER=noreply@${BASE_DOMAIN}

# ============================================
# STORAGE SERVICE (MINIO)
# ============================================
STORAGE_ENABLED=true
STORAGE_VERSION=0.6.1
STORAGE_ROUTE=storage.${BASE_DOMAIN}
STORAGE_CONSOLE_ROUTE=storage-console.${BASE_DOMAIN}
STORAGE_PORT=5001
MINIO_ENABLED=true
MINIO_VERSION=latest
MINIO_PORT=9000
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
MINIO_DEFAULT_BUCKETS=uploads,public,private,temp,mlflow-artifacts
S3_ACCESS_KEY=storage-access-key-demo
S3_SECRET_KEY=storage-secret-key-demo
S3_BUCKET=nhost
S3_REGION=us-east-1
S3_ENDPOINT=http://minio:9000

# ============================================
# NSELF ADMIN UI
# ============================================
NSELF_ADMIN_ENABLED=true
NSELF_ADMIN_PORT=3100
NSELF_ADMIN_ROUTE=admin.${BASE_DOMAIN}
ADMIN_PORT=3005

# ============================================
# NGINX & SSL CONFIGURATION
# ============================================
NGINX_VERSION=alpine
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443
NGINX_CLIENT_MAX_BODY_SIZE=100M
NGINX_GZIP_ENABLED=true
NGINX_RATE_LIMIT=""
SSL_MODE=local

# ============================================
# OPTIONAL SERVICES - ALL ENABLED FOR DEMO
# ============================================

# Redis
REDIS_ENABLED=true
REDIS_VERSION=7-alpine
REDIS_PORT=6379
REDIS_PASSWORD=demo-redis-password

# BullMQ (Job Queue) - Note: UI not yet implemented
# BULLMQ_ENABLED=true
# BULLMQ_UI_ENABLED=false
# BULLMQ_UI_PORT=3010
# BULLMQ_UI_ROUTE=bullmq.${BASE_DOMAIN}

# Search (MeiliSearch)
SEARCH_ENGINE=meilisearch
SEARCH_ENABLED=true
SEARCH_API_KEY=demo-search-api-key
MEILISEARCH_ENABLED=true
MEILISEARCH_VERSION=v1.5
MEILISEARCH_MASTER_KEY=demo-meilisearch-master-key-32chars
MEILISEARCH_PORT=7700
MEILISEARCH_ROUTE=search.${BASE_DOMAIN}

# Email (MailPit for dev)
EMAIL_PROVIDER=mailpit
MAILPIT_ENABLED=true
MAILPIT_SMTP_PORT=1025
MAILPIT_UI_PORT=8025
MAILPIT_ROUTE=mail.${BASE_DOMAIN}

# Functions
FUNCTIONS_ENABLED=true
FUNCTIONS_PORT=3008
FUNCTIONS_ROUTE=functions.${BASE_DOMAIN}

# MLflow (ML Experiment Tracking)
MLFLOW_ENABLED=true
MLFLOW_VERSION=2.9.2
MLFLOW_PORT=5005
MLFLOW_ROUTE=mlflow.${BASE_DOMAIN}
MLFLOW_DB_NAME=mlflow
MLFLOW_ARTIFACTS_BUCKET=mlflow-artifacts
MLFLOW_AUTH_ENABLED=false
MLFLOW_AUTH_USERNAME=admin
MLFLOW_AUTH_PASSWORD=mlflow-admin-password

# Temporal (Workflow Orchestration) - Not yet implemented
# TEMPORAL_ENABLED=false
# TEMPORAL_UI_PORT=8233
# TEMPORAL_UI_ROUTE=temporal.${BASE_DOMAIN}

# Monitoring Stack (Full Observability)
MONITORING_ENABLED=true
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_ROUTE=prometheus.${BASE_DOMAIN}
GRAFANA_ENABLED=true
GRAFANA_PORT=3006
GRAFANA_ROUTE=grafana.${BASE_DOMAIN}
GRAFANA_ADMIN_PASSWORD=demo-grafana-password
LOKI_ENABLED=true
LOKI_PORT=3100
TEMPO_ENABLED=true
TEMPO_PORT=3200
ALERTMANAGER_ENABLED=true
ALERTMANAGER_PORT=9093

# ============================================
# DATABASE ADMINISTRATION TOOLS - Not yet implemented
# ============================================
# ADMINER_ENABLED=false
# ADMINER_PORT=8081
# ADMINER_ROUTE=adminer.${BASE_DOMAIN}

# PGADMIN_ENABLED=false
# PGADMIN_PORT=5050
# PGADMIN_ROUTE=pgadmin.${BASE_DOMAIN}
# PGADMIN_DEFAULT_EMAIL=admin@${BASE_DOMAIN}
# PGADMIN_DEFAULT_PASSWORD=pgadmin-demo-password

# ============================================
# BACKUP & RECOVERY - Not yet automated
# ============================================
# BACKUP_ENABLED=false
# BACKUP_DIR=./backups
# BACKUP_SCHEDULE="0 2 * * *"
# BACKUP_RETENTION_DAYS=30

# ============================================
# CUSTOM BACKEND SERVICES
# ============================================
# Two example services from templates:
# CS_1: Express.js API service
# CS_2: BullMQ worker service
CS_1=service_1:express-js:8001
CS_2=service_2:bullmq-js:8002

# Additional configuration for CS_1
CS_1_MEMORY=512M
CS_1_CPU=0.5
CS_1_REPLICAS=1
CS_1_PUBLIC=true
CS_1_HEALTHCHECK=/health
CS_1_TABLE_PREFIX=svc1_
CS_1_REDIS_PREFIX=svc1:
CS_1_ROUTE=service1

# Additional configuration for CS_2
CS_2_MEMORY=256M
CS_2_CPU=0.25
CS_2_REPLICAS=1
CS_2_PUBLIC=false
CS_2_TABLE_PREFIX=svc2_
CS_2_REDIS_PREFIX=svc2:

# ============================================
# FRONTEND APPLICATIONS
# ============================================
# Two frontend apps with remote schemas
# These run externally and connect via nginx routing
FRONTEND_APP_COUNT=0

# Frontend App 1 - Next.js Demo
FRONTEND_APP_1_SYSTEM_NAME=app1
FRONTEND_APP_1_DISPLAY_NAME="Demo App 1"
FRONTEND_APP_1_TABLE_PREFIX=app1_
FRONTEND_APP_1_ROUTE=app1
FRONTEND_APP_1_PORT=3000
FRONTEND_APP_1_FRAMEWORK=nextjs
FRONTEND_APP_1_REMOTE_SCHEMA_URL=api.app1
FRONTEND_APP_1_REMOTE_SCHEMA_NAME=app1_api

# Frontend App 2 - React Demo
FRONTEND_APP_2_SYSTEM_NAME=app2
FRONTEND_APP_2_DISPLAY_NAME="Demo App 2"
FRONTEND_APP_2_TABLE_PREFIX=app2_
FRONTEND_APP_2_ROUTE=app2
FRONTEND_APP_2_PORT=3001
FRONTEND_APP_2_FRAMEWORK=react
FRONTEND_APP_2_REMOTE_SCHEMA_URL=api.app2
FRONTEND_APP_2_REMOTE_SCHEMA_NAME=app2_api

# ============================================
# REMOTE SCHEMAS
# ============================================
REMOTE_SCHEMAS_ENABLED=true

# Remote schema for CS_1 (service_1)
REMOTE_SCHEMA_1_NAME=service1-schema
REMOTE_SCHEMA_1_URL=http://service_1:8001/graphql
REMOTE_SCHEMA_1_HEADERS=x-hasura-admin-secret:demo-admin-secret

# Remote schema for CS_2 (service_2) if it exposes GraphQL
REMOTE_SCHEMA_2_NAME=service2-schema
REMOTE_SCHEMA_2_URL=http://service_2:8002/graphql
REMOTE_SCHEMA_2_HEADERS=x-hasura-admin-secret:demo-admin-secret

# Remote schemas for frontend apps
REMOTE_SCHEMA_3_NAME=app1_api
REMOTE_SCHEMA_3_URL=http://host.docker.internal:3000/api/graphql
REMOTE_SCHEMA_3_HEADERS=x-api-key:app1-api-key

REMOTE_SCHEMA_4_NAME=app2_api
REMOTE_SCHEMA_4_URL=http://host.docker.internal:3001/api/graphql
REMOTE_SCHEMA_4_HEADERS=x-api-key:app2-api-key

# ============================================
# DEVELOPMENT SETTINGS
# ============================================
DEBUG=true
LOG_LEVEL=debug
ENABLE_HOT_RELOAD=true
ENABLE_SOURCE_MAPS=true

# ============================================
# DEMO DATA
# ============================================
SEED_DATA=true
DEMO_USERS=true
DEMO_CONTENT=true

# ============================================
# ADVANCED CONFIGURATION (Auto-generated)
# ============================================
# These are automatically configured but included for completeness
DOCKER_NETWORK=${PROJECT_NAME}_network
HASURA_GRAPHQL_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
HASURA_GRAPHQL_JWT_SECRET='{"type":"${HASURA_JWT_TYPE}","key":"${HASURA_JWT_KEY}"}'

# Internal Service URLs
HASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
S3_ENDPOINT_INTERNAL=http://minio:${MINIO_PORT}