# {{SERVICE_NAME}} - Custom Service

This is a custom service template for {{PROJECT_NAME}}.

## Overview

This directory contains a placeholder service that you can replace with your actual implementation.

## Quick Start

The default implementation provides:
- A simple HTTP server on port 3000
- Health check endpoint at `/health`
- Hello world response at `/`

## Customization

Replace the `Dockerfile` with your actual service implementation. Some examples:

### Static Website
```dockerfile
FROM nginx:alpine
COPY ./dist /usr/share/nginx/html
EXPOSE 80
```

### Node.js App
```dockerfile
FROM node:18-alpine
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
EXPOSE 3000
CMD ["npm", "start"]
```

### Python App
```dockerfile
FROM python:3.11-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY . .
EXPOSE 5000
CMD ["python", "app.py"]
```

### Database
```dockerfile
FROM postgres:15-alpine
ENV POSTGRES_DB={{SERVICE_NAME}}_db
ENV POSTGRES_USER={{SERVICE_NAME}}_user
ENV POSTGRES_PASSWORD=changeme
EXPOSE 5432
```

## Environment Variables

Your service has access to:
- `PROJECT_NAME`: {{PROJECT_NAME}}
- `SERVICE_NAME`: {{SERVICE_NAME}}
- `BASE_DOMAIN`: {{BASE_DOMAIN}}

## Networking

Your service will be accessible within the Docker network as:
- Internal: `{{SERVICE_NAME}}:3000`
- External (if routed): `{{SERVICE_NAME}}.{{BASE_DOMAIN}}`

## Need Help?

Check the nself documentation for more examples and best practices.