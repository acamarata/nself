cmake_minimum_required(VERSION 3.20)

project({{SERVICE_NAME}})

set(CMAKE_CXX_STANDARD 17)

include(FetchContent)

# Fetch oatpp
FetchContent_Declare(
    oatpp
    GIT_REPOSITORY https://github.com/oatpp/oatpp.git
    GIT_TAG        1.3.0
)
FetchContent_MakeAvailable(oatpp)

# Fetch nlohmann_json for JSON handling
FetchContent_Declare(
    nlohmann_json
    GIT_REPOSITORY https://github.com/nlohmann/json.git
    GIT_TAG        v3.11.2
)
FetchContent_MakeAvailable(nlohmann_json)

# Include directories
include_directories(src)

# Add executable
add_executable({{SERVICE_NAME}}
    src/main.cpp
    src/App.cpp
    src/controller/ApiController.cpp
    src/controller/HealthController.cpp
    src/dto/DTOs.hpp
)

# Link libraries
target_link_libraries({{SERVICE_NAME}} 
    oatpp::oatpp
    nlohmann_json::nlohmann_json
)

# Set compile definitions
target_compile_definitions({{SERVICE_NAME}} PRIVATE
    SERVICE_NAME="{{SERVICE_NAME}}"
    PROJECT_NAME="{{PROJECT_NAME}}"
    BASE_DOMAIN="{{BASE_DOMAIN}}"
    SERVICE_PORT={{PORT}}
)

# Enable all warnings and treat warnings as errors
target_compile_options({{SERVICE_NAME}} PRIVATE 
    -Wall -Wextra -Wpedantic
)

# Set optimization flags for release builds
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
set(CMAKE_CXX_FLAGS_DEBUG "-g -O0 -DDEBUG")

# Install target
install(TARGETS {{SERVICE_NAME}} RUNTIME DESTINATION bin)