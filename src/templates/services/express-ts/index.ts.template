import express, { Request, Response } from 'express';

const app = express();
const port = process.env.PORT || 3000;

app.use(express.json());

interface HealthResponse {
  status: string;
  service: string;
  timestamp: string;
}

interface InfoResponse {
  service: string;
  project: string;
  framework: string;
  version: string;
  domain: string;
}

app.get('/health', (req: Request, res: Response) => {
  const response: HealthResponse = {
    status: 'healthy',
    service: '{{SERVICE_NAME}}',
    timestamp: new Date().toISOString()
  };
  res.json(response);
});

app.get('/api/info', (req: Request, res: Response) => {
  const response: InfoResponse = {
    service: '{{SERVICE_NAME}}',
    project: '{{PROJECT_NAME}}',
    framework: 'Express (TypeScript)',
    version: '4.x',
    domain: '{{BASE_DOMAIN}}'
  };
  res.json(response);
});

app.get('/', (req: Request, res: Response) => {
  res.json({
    message: 'Hello from {{SERVICE_NAME}}!',
    project: '{{PROJECT_NAME}}',
    framework: 'Express - Fast, unopinionated, minimalist web framework',
    runtime: 'Node.js (TypeScript)'
  });
});

app.all('*', (req: Request, res: Response) => {
  res.json({
    message: 'Hello from {{SERVICE_NAME}}!',
    path: req.path,
    method: req.method
  });
});

app.listen(port, () => {
  console.log(`🚀 {{SERVICE_NAME}} is running on http://localhost:${port}`);
  console.log(`📍 Health check: http://localhost:${port}/health`);
});