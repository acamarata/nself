const express = require('express');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(express.json());

// Health check endpoint
app.get('/health', (req, res) => {
  res.json({ 
    status: 'healthy',
    service: '{{SERVICE_NAME}}',
    timestamp: new Date().toISOString()
  });
});

// Hello World endpoint
app.get('/', (req, res) => {
  res.json({ 
    message: 'Hello from {{SERVICE_NAME}}!',
    project: '{{PROJECT_NAME}}',
    framework: 'Express',
    version: '4.18.2'
  });
});

// Example API endpoint
app.get('/api/info', (req, res) => {
  res.json({
    service: '{{SERVICE_NAME}}',
    environment: process.env.NODE_ENV || 'development',
    uptime: process.uptime(),
    memory: process.memoryUsage(),
    domain: '{{BASE_DOMAIN}}'
  });
});

// Example POST endpoint
app.post('/api/echo', (req, res) => {
  res.json({
    received: req.body,
    timestamp: new Date().toISOString()
  });
});

// 404 handler
app.use((req, res) => {
  res.status(404).json({ 
    error: 'Not Found',
    path: req.path
  });
});

// Error handler
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ 
    error: 'Internal Server Error',
    message: process.env.NODE_ENV === 'development' ? err.message : 'Something went wrong!'
  });
});

// Start server
app.listen(PORT, () => {
  console.log(`🚀 {{SERVICE_NAME}} is running on port ${PORT}`);
  console.log(`📍 Health check: http://localhost:${PORT}/health`);
  console.log(`🌐 API endpoint: http://localhost:${PORT}/api/info`);
});