# ╔═══════════════════════════════════════════════════════╗
# ║              STAGING ENVIRONMENT                      ║
# ╠═══════════════════════════════════════════════════════╣
# ║ Pre-production testing configuration                  ║
# ║ Should mirror production closely                      ║
# ╚═══════════════════════════════════════════════════════╝

# Override defaults for staging environment
# Use production-like settings with test data

# Core Settings
# PROJECT_NAME=myproject-staging
# BASE_DOMAIN=staging.example.com

# Staging URLs (public endpoints)
# HASURA_ROUTE=api.${BASE_DOMAIN}
# AUTH_ROUTE=auth.${BASE_DOMAIN}
# STORAGE_ROUTE=storage.${BASE_DOMAIN}
# AUTH_CLIENT_URL=https://app.staging.example.com
# AUTH_SERVER_URL=https://auth.staging.example.com

# External Integrations (staging)
# HASURA_GRAPHQL_REMOTE_SCHEMAS=https://staging-remote.example.com/graphql
# HASURA_GRAPHQL_ACTIONS_HANDLER_WEBHOOK_BASEURL=https://staging-webhooks.example.com

# Staging Features (production-like)
# HASURA_GRAPHQL_ENABLE_CONSOLE=false
# HASURA_GRAPHQL_DEV_MODE=false
# HASURA_GRAPHQL_ENABLE_TELEMETRY=false
# SSL_MODE=letsencrypt

# Resource Limits (smaller than production)
# POSTGRES_MAX_CONNECTIONS=50
# HASURA_GRAPHQL_PG_CONNECTIONS=25
# REDIS_MAXMEMORY=256mb

# Monitoring/Debugging (more verbose than prod)
# LOG_LEVEL=info
# HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup,http-log,webhook-log
# PROMETHEUS_ENABLED=true
# GRAFANA_ENABLED=true

# Email (staging provider)
# EMAIL_PROVIDER=sendgrid
# EMAIL_FROM=noreply@staging.example.com