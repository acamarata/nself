#####################################
# nself Configuration Reference
# 
# This file shows ALL available configuration options with their default values.
# DO NOT edit this file directly - it's for reference only.
#
# To configure your project:
# 1. Edit .env.local with ONLY the values you want to change
# 2. nself will use smart defaults for everything else
# 
# For production:
# 1. Run 'nself prod' to generate secure passwords
# 2. Create .env with production overrides
#
# Priority order: .env > .env.local > defaults
#####################################

#####################################
# CORE PROJECT SETTINGS
#####################################

# Environment Mode: dev or prod
# dev = Development mode with dev tools, mock data, debug logging
# prod = Production mode with security hardening, optimizations
ENV=dev

# Project Identifier
# Used for Docker container names, database names, resource prefixes
PROJECT_NAME=myproject

# Base Domain
# All services will be subdomains of this domain
# Development: local.nself.org (automatic SSL)
# Production: your-domain.com
BASE_DOMAIN=local.nself.org

# Database Seeding Strategy
# true: Hasura/PostgreSQL standard (common/ + env-specific)
# false: Single default/ directory for all environments
DB_ENV_SEEDS=true

#####################################
# PostgreSQL Database
#####################################
POSTGRES_VERSION=16-alpine
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=nhost
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres-dev-password
# Extensions: timescaledb,postgis,pg_cron,pgvector,uuid-ossp
POSTGRES_EXTENSIONS=uuid-ossp

#####################################
# Hasura GraphQL Engine
#####################################
HASURA_VERSION=v2.44.0
HASURA_GRAPHQL_ADMIN_SECRET=hasura-admin-secret-dev
HASURA_GRAPHQL_JWT_SECRET='{"type":"HS256","key":"development-secret-key-minimum-32-characters-long"}'
HASURA_GRAPHQL_ENABLE_CONSOLE=true
HASURA_GRAPHQL_DEV_MODE=true
HASURA_GRAPHQL_ENABLE_TELEMETRY=false
HASURA_GRAPHQL_CORS_DOMAIN=*
HASURA_ROUTE=api.${BASE_DOMAIN}

# Remote Schemas (optional)
# REMOTE_SCHEMA_1_NAME=external_api
# REMOTE_SCHEMA_1_URL=https://api.external.com/graphql
# REMOTE_SCHEMA_1_HEADERS=x-api-key:your-api-key

#####################################
# Hasura Auth Service
#####################################
AUTH_VERSION=0.36.0
AUTH_HOST=auth
AUTH_PORT=4000
AUTH_CLIENT_URL=http://localhost:3000
AUTH_JWT_REFRESH_TOKEN_EXPIRES_IN=2592000
AUTH_JWT_ACCESS_TOKEN_EXPIRES_IN=900
AUTH_WEBAUTHN_ENABLED=false
AUTH_ROUTE=auth.${BASE_DOMAIN}

# Email Configuration (Development - MailPit)
AUTH_SMTP_HOST=mailpit
AUTH_SMTP_PORT=1025
AUTH_SMTP_USER=""
AUTH_SMTP_PASS=""
AUTH_SMTP_SECURE=false
AUTH_SMTP_SENDER=noreply@${BASE_DOMAIN}

#####################################
# File Storage (MinIO/S3)
#####################################
STORAGE_VERSION=0.6.1
STORAGE_ROUTE=storage.${BASE_DOMAIN}
STORAGE_CONSOLE_ROUTE=storage-console.${BASE_DOMAIN}
MINIO_VERSION=latest
MINIO_PORT=9000
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
S3_ACCESS_KEY=storage-access-key-dev
S3_SECRET_KEY=storage-secret-key-dev
S3_BUCKET=nhost
S3_REGION=us-east-1

#####################################
# Nginx Proxy Configuration
#####################################
NGINX_VERSION=alpine
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

#####################################
# SSL/TLS Configuration
#####################################
# Modes: local, letsencrypt, custom, none
SSL_MODE=local
# LETSENCRYPT_EMAIL=admin@yourdomain.com
# LETSENCRYPT_STAGING=true
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/key.pem

#####################################
# Optional Services
#####################################

# Functions Service
FUNCTIONS_ENABLED=false
FUNCTIONS_ROUTE=functions.${BASE_DOMAIN}

# Dashboard
DASHBOARD_ENABLED=false
DASHBOARD_VERSION=latest
DASHBOARD_ROUTE=dashboard.${BASE_DOMAIN}

# Redis Cache
REDIS_ENABLED=false
REDIS_VERSION=7-alpine
REDIS_PORT=6379
REDIS_PASSWORD=""

# Email Testing (Development)
EMAIL_PROVIDER=mailpit
MAILPIT_SMTP_PORT=1025
MAILPIT_UI_PORT=8025
MAILPIT_ROUTE=mail.${BASE_DOMAIN}
EMAIL_FROM=noreply@${BASE_DOMAIN}

#####################################
# Microservices Configuration
#####################################
SERVICES_ENABLED=false

# NestJS Services
NESTJS_ENABLED=false
NESTJS_SERVICES=""
NESTJS_USE_TYPESCRIPT=true
NESTJS_PORT_START=3100

# BullMQ Workers
BULLMQ_ENABLED=false
BULLMQ_WORKERS=""
BULLMQ_DASHBOARD_ENABLED=false
BULLMQ_DASHBOARD_PORT=3200
BULLMQ_DASHBOARD_ROUTE=queues.${BASE_DOMAIN}

# GoLang Services
GOLANG_ENABLED=false
GOLANG_SERVICES=""
GOLANG_PORT_START=3300

# Python Services
PYTHON_ENABLED=false
PYTHON_SERVICES=""
PYTHON_FRAMEWORK=fastapi
PYTHON_PORT_START=3400

# NestJS Always-Running Service
NESTJS_RUN_ENABLED=false
NESTJS_RUN_PORT=3500

#####################################
# Advanced Configuration
#####################################

# Hasura Metadata
HASURA_METADATA_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# Docker Network
DOCKER_NETWORK=${PROJECT_NAME}_network

# Internal Ports
HASURA_PORT=8080
HASURA_CONSOLE_PORT=9695
FUNCTIONS_PORT=3000
DASHBOARD_PORT=3000
CONFIG_SERVER_PORT=4001

# Service Endpoints
S3_ENDPOINT=http://minio:${MINIO_PORT}
FILES_ROUTE=files.${BASE_DOMAIN}
MAIL_ROUTE=mail.${BASE_DOMAIN}

#####################################
# Application Routes
#####################################

# Custom app routing (port:subdomain)
# APP_1_ROUTE=3000:app.${BASE_DOMAIN}
# APP_2_ROUTE=3001:admin.${BASE_DOMAIN}
# APP_3_ROUTE=5173:dev.${BASE_DOMAIN}